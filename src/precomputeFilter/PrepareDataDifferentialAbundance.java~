package precomputeFilter;


import java.io.File;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Scanner;

import precomputeFilter.StatisticsDifferentialAbundance;


public class PrepareDataDifferentialAbundance {
	
	public static void CountFre(StatisticsDifferentialAbundance dataCounts, String[] content) {
		dataCounts.sumOfSquares = 0.0;
		for(int i = 1; i < content.length; i++){
			dataCounts.sumOfSquares += (Double.parseDouble((content[i]))*Double.parseDouble((content[i])));
			dataCounts.totalSum += Double.parseDouble((content[i]));
			if(Double.parseDouble(content[i]) > 0.0){
				dataCounts.numOfPresent++;
			}
		}
		dataCounts.numOfSamples = content.length-1;
	}
	
	public static class StatisticsData {
		public StatisticsDifferentialAbundance[] data;
		public int numOfTuples;
	}
	
	public static StatisticsData readFile(String filename) {
		File file = new File(filename);
		Scanner scanner; 
		StatisticsData d = new StatisticsData(); 
		LinkedList<StatisticsDifferentialAbundance> lsta = new LinkedList<StatisticsDifferentialAbundance>();
		try {
			scanner = new Scanner(file);
			String line = scanner.nextLine();
			while(scanner.hasNextLine()) {
				StatisticsDifferentialAbundance sta = new StatisticsDifferentialAbundance();
				line = scanner.nextLine();
				
				String[] counts = line.split(" ");
				CountFre(sta, counts);
				lsta.add(sta);
			}
			scanner.close();			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		d.data = lsta.toArray(new StatisticsDifferentialAbundance[0]);
		d.numOfTuples = d.data.length;
		return d;
	}
}
